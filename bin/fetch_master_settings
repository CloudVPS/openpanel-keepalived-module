#!/bin/bash

fatal() {
    echo $1
    exit 1
}

get() {
    HOST=$1
    SRC="${2}"
    DST="${3}"

    scp -q -o StrictHostKeyChecking=no \
        -o PasswordAuthentication=no \
        -i "${SDIR}/id_rsa" \
        "openpanel-ha@${MASTER}:${SRC}" "${DST}"

    return $?
}

rget() {
    HOST=$1
    SRC="${2}"
    DST="${3}"

    rsync -a --delete -e "ssh -o StrictHostKeyChecking=no \
        -o PasswordAuthentication=no\
        -i ${SDIR}/id_rsa" \
        "openpanel-ha@${MASTER}:${SRC}" "${DST}"
}

put() {
    HOST=$1
    SRC="${2}"
    DST="${3}"

    scp -q -o StrictHostKeyChecking=no \
        -o PasswordAuthentication=no \
        -i "${SDIR}/id_rsa" \
        "${SRC}" "openpanel-ha@${MASTER}:${DST}"

    return $?
}

reload_keepalived() {
    if [ -f /var/run/keepalived.pid ]; then
        KPID=$(cat /var/run/keepalived.pid)
        if [ -d /proc/${KPID} ]; then
            /etc/init.d/keepalived reload
        else
            /etc/init.d/keepalived start
        fi
    else
        /etc/init.d/keepalived start
    fi
}

reload_ipsec() {
    if [ -f /var/run/ipsec/pluto.pid ]; then
        PPID=$(cat /var/run/ipsec/pluto.pid)
        if [ -d /proc/${PPID} ]; then
            /etc/init.d/ipsec reload
        else
            /etc/init.d/ipsec start
        fi
    else 
        /etc/init.d/ipsec start
    fi
}

SDIR=/etc/openpanel/ha
TMPDIR=$(mktemp -d)

KEEPALIVED="true"
RELOADIPSEC="false"

# Don't run if we aren't an active slave
[ -f "${SDIR}/active_slave" ] || exit 0

MASTER=$(cat "${SDIR}/slave_master_ip")
PRIO=$(cat "${SDIR}/prio")
EXTERNAL_IFACE=$(cat "${SDIR}/external_iface")
SYNCD_IFACE=$(cat "${SDIR}/syncd_iface")
ROUTERID=$(cat "${SDIR}/routerid")
NOTIFICATION_EMAIL=$(cat "${SDIR}/notifications")
SMTP_SERVER=$(cat "${SDIR}/smtp_server")


[ -z "${PRIO}" -o -z "${MASTER}" ] && fatal "Invalid values for master ip or priority"
[ -z "${SYNCD_IFACE}" -o -z "${EXTERNAL_IFACE}" ] && fatal "External and/or syncd interface is not set"
[ -f "${SDIR}/id_rsa" ] || fatal "There is no ssh-key I can use to login to the master"

get ${MASTER} /etc/keepalived/keepalived_template.conf ${TMPDIR}/keepalived_template.conf

if [ $? -eq 0 ]; then
    cat ${TMPDIR}/keepalived_template.conf | \
        sed -e "s/@ROUTERID@/${ROUTERID}/" | \
        sed -e "s/@NOTIFICATIONS@/${NOTIFICATION_EMAIL}/" | \
        sed -e "s/@SMTP_SERVER@/${SMTP_SERVER}/" | \
        sed -e "s/@EXTINTF@/${EXTERNAL_IFACE}/" | \
        sed -e "s/@SYNCINTF@/${SYNCD_IFACE}/" | \
        sed -e "s/@PRIO@/${PRIO}/" > /etc/keepalived/keepalived.conf.tmp

    [ $? -eq 0 ] && {
    if [ -f /etc/keepalived/keepalived.conf ]; then
        diff -q /etc/keepalived/keepalived.conf.tmp /etc/keepalived/keepalived.conf || { \
            mv /etc/keepalived/keepalived.conf.tmp /etc/keepalived/keepalived.conf && \
            reload_keepalived
        }
    else
        mv /etc/keepalived/keepalived.conf.tmp /etc/keepalived/keepalived.conf && \
            reload_keepalived
    fi
    }
else
    if [ -f /etc/keepalived/keepalived.conf ]; then
        /etc/init.d/keepalived stop
        rm /etc/keepalived/keepalived.conf
    fi
    KEEPALIVED="false"
fi

get ${MASTER} ${SDIR}/nat-gw ${TMPDIR}/nat-gw

if [ $? -eq 0 ]; then
    cat ${TMPDIR}/nat-gw | \
        sed -e "s/E_IFACE=.*/E_IFACE=${EXTERNAL_IFACE}/" | \
        sed -e "s/I_IFACE=.*/I_IFACE=${SYNCD_IFACE}/" > ${SDIR}/nat-gw.tmp

    [ $? -eq 0 ] && {
    if [ -f ${SDIR}/nat-gw ]; then
        diff -q ${SDIR}/nat-gw.tmp ${SDIR}/nat-gw || {\
                mv ${SDIR}/nat-gw.tmp ${SDIR}/nat-gw && \
                /etc/init.d/keepalived-nat-gw restart 
        }
    else
        mv ${SDIR}/nat-gw.tmp ${SDIR}/nat-gw
        /usr/sbin/update-rc.d keepalived-nat-gw defaults
        /etc/init.d/keepalived-nat-gw start
    fi
    }
else
    if [ -f ${SDIR}/nat-gw ]; then
        /etc/init.d/keepalived-nat-gw stop
        rm -f ${SDIR}/nat-gw
        /usr/sbin/update-rc.d -f keepalived-nat-gw remove
    fi
fi

if [ "${KEEPALIVED}" = "true" ]; then
	NOW=$(date)
	ME=$(hostname -f)
	echo "<p>Information on ${ME}: <br />" > ${TMPDIR}/slavestatus
	echo "Last update: ${NOW}<br />" >> ${TMPDIR}/slavestatus
	
	if [ -f /var/run/keepalived.pid ]; then 
	    KPID=$(cat /var/run/keepalived.pid)
	    if [ -d /proc/${KPID} ]; then
	        echo "Keepalived running. Pid: ${KPID}<br />" >> ${TMPDIR}/slavestatus
            echo "<pre>" >> ${TMPDIR}/slavestatus
            /var/openpanel/tools/openpanel-keepalived-status >> ${TMPDIR}/slavestatus
            echo "</pre>" >> ${TMPDIR}/slavestatus
	    else
	        echo "Pidfile for Keepalived found, but it's not running<br />" >> ${TMPDIR}/slavestatus
	    fi
	else
	    echo "<strong>No pidfile found for Keepalived</strong><br />" >> ${TMPDIR}/slavestatus
	fi
    echo "</p>" >> ${TMPDIR}/slavestatus
    
    MYIP=$(ip ro get ${MASTER} | grep src | awk ' { print $NF } ')
    put ${MASTER} ${TMPDIR}/slavestatus /etc/openpanel/ha/slavestatus/${MYIP}
fi

get ${MASTER} /etc/openpanel/rc.firewall ${TMPDIR}/rc.firewall

if [ $? -eq 0 ]; then
    if [ -f /etc/openpanel/rc.firewall ]; then
        diff -q ${TMPDIR}/rc.firewall /etc/openpanel/rc.firewall || { \
            mv ${TMPDIR}/rc.firewall /etc/openpanel/rc.firewall && \
            /etc/init.d/iptables restart
        }
    else
        mv ${TMPDIR}/rc.firewall /etc/openpanel/rc.firewall && \
        /etc/init.d/iptables restart
    fi
else
    if [ -f /etc/openpanel/rc.firewall ]; then
        /etc/init.d/iptables stop
        rm -f /etc/openpanel/rc.firewall
    fi
fi

rget ${MASTER} /etc/openpanel/iptables.d ${TMPDIR}/
if [ $? -eq 0 ]; then
    diff -qr ${TMPDIR}/iptables.d/ /etc/openpanel/iptables.d/ || { \
        rsync -a --delete ${TMPDIR}/iptables.d/ /etc/openpanel/iptables.d/ && \
            /var/openpanel/tools/iptables-update
    }
fi

get ${MASTER} /etc/ipsec.conf ${TMPDIR}/ipsec/ipsec.conf
if [ $? -eq 0 ]; then
    diff -q /etc/ipsec.conf ${TMPDIR}/ipsec/ipsec.conf || { \
        mv ${TMPDIR}/ipsec/ipsec.conf /etc/ipsec.conf && \
            RELOADIPSEC="true"
    }
fi

get ${MASTER} /etc/ipsec.secrets ${TMPDIR}/ipsec/ipsec.secrets
if [ $? -eq 0 ]; then
    diff -q /etc/ipsec.secrets ${TMPDIR}/ipsec/ipsec.secrets || { \
        mv ${TMPDIR}/ipsec/ipsec.secrets /etc/ipsec.secrets && \
            RELOADIPSEC="true"
    }
fi

rget ${MASTER} /etc/ipsec.d/ ${TMPDIR}/ipsec/
if [ $? -eq 0 ]; then
    diff -qr ${TMPDIR}/ipsec/ipsec.d/ /etc/ipsec.d/ || { \
        rsync -a --delete ${TMPDIR}/ipsec/ipsec.d/ /etc/ipsec.d/ && \
            RELOADIPSEC="true"
    }
fi

if [ "${RELOADIPSEC}" = "true" ]; then
    reload_ipsec
fi

exit 0
