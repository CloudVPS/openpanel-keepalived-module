#!/usr/bin/python

from OpenPanel.coreclient import CoreSession
from subprocess import Popen, PIPE
from re import match
from os import path
from sys import exit

def get_ipvsadm(raw=False):
    output=Popen(["/sbin/ipvsadm", "-l", "-n"], stdout=PIPE).communicate()[0]

    if raw == True:
        return output

    rettree = {}
    for line in output.split("\n"):
        matches = match("^\s+->\s+([0-9a-f:.]+):([0-9]+)", line)
        if matches != None:
            keyname = str(matches.group(1)+":"+matches.group(2))
            rettree[keyname] = "true"

    return rettree

def check_keepalived():
    pid = str()

    if path.exists("/var/run/keepalived.pid"):
        fd = open("/var/run/keepalived.pid")
        pid = fd.read()

    if pid == "" or path.exists("/proc/"+pid) == None:
        return "<strong>Keepalived is not running!</strong>"

    return "Keepalived is running. Pid: %s" % (pid)

def fetch_slave_status(slip):
    if path.exists("/etc/openpanel/ha/slavestatus/"+slip):
        fd = open("/etc/openpanel/ha/slavestatus/"+slip)
        return fd.read()
    else:
        return "<strong>No status found for %s!</strong>" % (slip)

def html_head():
    print """<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="refresh" content="30" />
    <title>Keepalived Status Page</title>
  </head>
  <body>"""

def html_bottom():
    print """  </body>
</html>"""

c = CoreSession()
c.login()

if c.rpc.getrecords(classid='Keepalived')['body']['data']['Keepalived']['keepalived']['master_slave'] == "slave":
    html_head()
    print "<pre>"
    print get_ipvsadm(True)
    print "</pre>"
    html_bottom()
    exit(0)

if c.rpc.getrecords(classid='Keepalived:RSPool')['body']['data']['info']['total'] == 0:
    html_head()
    print "<h1>No configuration yet</h1>"
    html_bottom()
    exit(0)

pools    = c.rpc.getrecords(classid='Keepalived:RSPool')['body']['data']['Keepalived:RSPool']
rservers = c.rpc.getrecords(classid='Keepalived:Realserver')['body']['data']['Keepalived:Realserver']
vips     = c.rpc.getrecords(classid='Keepalived:SLBMaster')['body']['data']['Keepalived:SLBMaster']
slaves   = c.rpc.getrecords(classid='Keepalived:Slaves')['body']['data']

tree = dict()
acttree = get_ipvsadm()
keepalived_check = check_keepalived()

for p in pools:
    tree[pools[p]['uuid']] = dict()
    tree[pools[p]['uuid']]['description'] = pools[p]['rsp_description']
    tree[pools[p]['uuid']]['vips'] = list()
    tree[pools[p]['uuid']]['realservers'] = list()

for v in vips:
    tree[vips[v]['parentid']]['vips'].append(vips[v])

for r in rservers:
    tree[rservers[r]['parentid']]['realservers'].append(rservers[r])

html_head()

for i in tree:
    print "<h1>Information for pool: %s</h1>" % (tree[i]['description'])

    print "<p>Available VIPS in this pool:</p>"
    print "<ul>"
    for v in tree[i]['vips']:
        print "<li>%s:%s</li>" % (v['vip_ip'], v['vip_port'])
        print "</ul>"

    print "<p>Available realservers in this pool:</p>"
    print "<ul>"
    for r in tree[i]['realservers']:
        keyname = str(r['rs_ip']+":"+r['rs_port'])
        if r['rs_enabled'] == False:
            print '<li>%s:%s <img src="/modules/keepalived/cross.png" title="disabled" alt="disabled"/></li>' % (r['rs_ip'], r['rs_port'])
        elif keyname in acttree:
            print '<li>%s:%s <img src="/modules/keepalived/tick.png" title="up" alt="up"/></li>' % (r['rs_ip'], r['rs_port'])
        else:
            print '<li>%s:%s <img src="/modules/keepalived/error.png" title="down" alt="down"/></li>' % (r['rs_ip'], r['rs_port'])
    print "</ul>"

print "<p>Master Keepalived status:<br />%s</p>" % (keepalived_check)

print "<h1>Slave status</h1>"

if slaves['info']['total'] > 0:
    print "<ul>"
    for s in slaves['Keepalived:Slaves']:
        slip = slaves['Keepalived:Slaves'][s]['slave_ip']
        print "<li><strong>%s</strong><br />%s</li>" % (slip, fetch_slave_status(slip))
    print "</ul>"
else:
    print "<p>No slaves configured</p>"

html_bottom()
